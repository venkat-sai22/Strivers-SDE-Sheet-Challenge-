class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
  // Create a new linked list to store the sum
  ListNode result = new ListNode();
  ListNode currentNode = result;

  // Set up a variable to keep track of the carryover
  int carryover = 0;

  // Loop through both linked lists until we reach the end of both
  while (l1 != null || l2 != null) {
    // Extract the value from each node, or use 0 if the node is null
    int val1 = (l1 != null) ? l1.val : 0;
    int val2 = (l2 != null) ? l2.val : 0;

    // Add the two values and the carryover, and calculate the new carryover
    int sum = val1 + val2 + carryover;
    carryover = sum / 10;

    // Append the sum to the current node in the result linked list
    currentNode.next = new ListNode(sum % 10);
    currentNode = currentNode.next;

    // Move to the next node in both input linked lists
    if (l1 != null) l1 = l1.next;
    if (l2 != null) l2 = l2.next;
  }

  // If there is still a carryover, add a new node to the end of the result list
  if (carryover > 0) {
    currentNode.next = new ListNode(carryover);
  }

  // Return the result, starting from the second node (the first node is a placeholder)
  return result.next;
}
}